# Generated by Django 4.2.2 on 2023-07-02 08:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('web_developer', 'Web Developer'), ('computer_programmer', 'Computer Programmer'), ('architect', 'Architect'), ('actor', 'Actor'), ('teacher', 'Teacher'), ('finance', 'Finance')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='JobRequirements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requirement', models.CharField(max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.category')),
            ],
        ),
        migrations.CreateModel(
            name='JobPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', models.CharField(choices=[('kathmandu', 'Kathmandu'), ('lalitpur', 'Lalitpur'), ('bhaktapur', 'Bhaktapur'), ('pokhara', 'Pokhara'), ('dharan', 'Dharan')], max_length=255)),
                ('is_open', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='website.category')),
                ('employer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('requirements', models.ManyToManyField(to='website.jobrequirements')),
            ],
        ),
    ]
